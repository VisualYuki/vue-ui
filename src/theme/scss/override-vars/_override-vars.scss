@use 'sass:map';
@use 'sass:color';
@use 'sass:math';
@use '../utils' as *;

$color-types: primary, success, info, danger, error, warning;

$colors: () !default;
$colors: map.merge(
	(
		'white': #ffffff,
		'black': #000000,
		'primary': (
			'base': #409eff
		),
		'success': (
			'base': #67c23a
		),
		'warning': (
			'base': #e6a23c
		),
		'danger': (
			'base': #f56c6c
		),
		'error': (
			'base': #f56c6c
		),
		'info': (
			'base': #909399
		)
	),
	$colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

@mixin set-color-mix-level($type, $number, $mode: 'light', $mix-level: $color-white) {
	$colors: map.set(
		$colors,
		$type,
		'#{$mode}-#{$number}',
		color.mix($color-white, map.get($colors, $type, 'base'), math.percentage(math.div($number, 10)))
	) !global;
}

@each $type in $color-types {
	@for $i from 1 through 9 {
		@include set-color-mix-level($type, $i, 'light', $color-white);
	}
}

@each $type in $color-types {
	@include set-color-mix-level($type, 2, 'dark', $color-black);
}

$text-color: () !default;
$text-color: map.merge(
	(
		'primary': getCssVar(('color', 'black', '2')),
		'regular': getCssVar(('color', 'black', '4')),
		'secondary': getCssVar(('color', 'black', '5')),
		'placeholder': getCssVar(('color', 'black', '7')),
		'disabled': getCssVar(('color', 'black', '8'))
	),
	$text-color
);

$font-family: () !default;
$font-family: map.merge(
	(
		'': "'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif"
	),
	$font-family
);

$font-size: () !default;
$font-size: map.merge(
	(
		'extra-large': 20px,
		'large': 18px,
		'medium': 16px,
		'base': 14px,
		'small': 13px,
		'extra-small': 12px
	),
	$font-size
);

// BORDER
$border-width: 1px !default;
$border-style: solid !default;
$border-color: () !default;
$border-color: map.merge(
	(
		'': #dcdfe6,
		'light': #e4e7ed,
		'lighter': #ebeef5,
		'extra-light': #f2f6fc,
		'dark': #d4d7de,
		'darker': #cdd0d6
	),
	$border-color
);

$fill-color: () !default;
$fill-color: map.merge(
	(
		'': #f0f2f5,
		'light': #f5f7fa,
		'lighter': #fafafa,
		'extra-light': #fafcff,
		'dark': #ebedf0,
		'darker': #e6e8eb,
		'blank': #ffffff
	),
	$fill-color
);

$border-radius: () !default;
$border-radius: map.merge(
	(
		'base': 4px,
		'small': 2px,
		'round': 20px,
		'circle': 100%
	),
	$border-radius
);
